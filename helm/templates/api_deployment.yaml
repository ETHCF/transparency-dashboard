{{- $chart := include "chart" . -}}
{{- $fullname := include "fullname" . -}}
{{- $api := .Values.backend.api -}}
{{- $backend := .Values.backend -}}
{{- $name := printf "%s-api" $fullname -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name }}
  namespace: {{ $.Values.namespace }}
  labels:
    app.kubernetes.io/name: {{ $name }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    helm.sh/chart: {{ $chart }}
    {{- if $api.additionalLabels}}
    {{- toYaml $api.additionalLabels | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ default 1 $api.autoscaler.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $name }}
      app.kubernetes.io/instance: {{ $.Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ $name }}
        app.kubernetes.io/instance: {{ $.Release.Name }}
        app.kubernetes.io/managed-by: {{ $.Release.Service }}
        helm.sh/chart: {{ $chart }}
        {{- if $api.additionalLabels}}
        {{- toYaml $api.additionalLabels | nindent 8 }}
        {{- end }}
    spec:
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: api
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 1001
            runAsNonRoot: true
            capabilities:
              drop:
                - ALL
          image: "{{ $backend.image.registry }}/{{ $backend.image.repository }}:{{ $backend.image.tag }}"
          imagePullPolicy: {{ $backend.image.pullPolicy }}
          
          {{- if $api.command }}
          command: [{{ $api.command }}]
          {{- if $api.args }}
          args: {{- range $api.args }}
            - {{.}}
            {{- end }}
          {{- end }}
          {{- end }}
          env:
            - name: VERSION
              value: {{ $backend.image.tag | quote }}
            - name: VERBOSITY
              value: {{ $backend.verbosity }}
            - name: ALCHEMY_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "alchemySecretName" . }}
                  key: {{ .Values.global.alchemy.apiKeySecretKey }}
            - name: INITIAL_ADMIN_ADDRESS
              value: {{ .Values.global.initialAdminAddress | quote }}
            {{- if .Values.global.rpcURL }}
            - name: RPC_URL
              value: {{ .Values.global.rpcURL | quote }}
            {{- end }}
            - name: DBHOST
              value: {{ include "postgresHost" . | quote}}
            - name: DBPORT
              value: {{ include "postgresPort" . | quote }}
            - name: DBNAME
              value: {{ include "postgresDatabase" . }}
            - name: DBPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "postgresPasswordSecret" . | quote}}
                  key: {{ include "postgresPasswordKey" . | quote}}
            - name: DBUSER
              {{- if .Values.postgresql.enabled }}
              {{- if .Values.postgresql.auth.username }}
              value: {{ .Values.postgresql.auth.username | quote }}
              {{- else }}
              value: {{ "postgres" | quote }}
              {{- end }}

              {{- else }}

              {{- if not .Values.externalPostgresql.existingSecret }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "postgresPasswordSecret" . }}
                  key: {{ .Values.externalPostgresql.secretKeys.usernameKey }}
              {{- else }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.externalPostgresql.existingSecret }}
                  key: {{ .Values.externalPostgresql.secretKeys.usernameKey }}
              {{- end }}
              {{- end }}
          {{- if $api.env }}
          {{- toYaml $api.env | indent 12 }}
          {{- end }}

          ports:
            - name: http
              containerPort: {{ $api.service.internalPort }}
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /api/v1/health
              port: {{ $api.service.internalPort }}
            failureThreshold: 1
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /api/v1/health
              port: {{ $api.service.internalPort }}
            failureThreshold: 2
            periodSeconds: 5

          resources:
            {{- toYaml $api.resources | nindent 14 }}
